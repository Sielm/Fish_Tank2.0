<html>
	<head>
		<title>FishTank 2.0</title>
		<script src="http://cloud.github.com/downloads/processing-js/processing-js/processing-1.4.1.min.js"></script>
		<script type="text/processing" data-processing-target="mycanvas">
        // Declare and contruct two objects (h1, h2) from the class HorizontalLine 
        
        // Declare and contruct two objects (h1, h2) from the class HorizontalLine 
        
        ArrayList<Fish> fishList;
        var fishWidth = random (30,50);
        var fishLength = random (50,100);
 		
 		var boatWidth = 80;
 		var boatLength = 200;

 		Boat myBoat = new Boat(200,80);
 		
        
        int WINDOW_WIDTH = 600;
        int WINDOW_HEIGHT = 600;
        
        int REFRESH_RATE_PER_SECOND = 30;
        //runs once at the start of the program 
        void setup() 
        {
          
          fishList = new ArrayList<Fish>();
          var numberOfFish = random(1,7);
          for(var i = 0; i < numberOfFish; i++) {
			fishList.add(new Fish(fishWidth,fishLength));
		  }
          size(WINDOW_WIDTH, WINDOW_HEIGHT);
        
          frameRate(REFRESH_RATE_PER_SECOND);//how often per second the draw function is called 
        
        }
        
        
        //called repeatedly 
        void draw() { 
          background(157, 198, 217);
          
          //kelp

		  fill(20, 153, 29);
		  noStroke();
		  beginShape();
		  curveVertex(592,  729);
		  curveVertex(439,  767);
		  curveVertex(591,  382);
		  curveVertex(527,  471);
		  curveVertex(525, 319);
		  curveVertex(361, 645);
		  endShape();
          //the ground
          noStroke();
	  	  fill(198, 201, 175);
		  ellipse(300, 600, 650, 80);
		  ellipse(500, 610, 800, 90);
		  ellipse(575, 600, 700, 90);
		  //the rocks
		  fill(156, 148, 148);
		  ellipse(275, 570, 70, 80);
		  ellipse(320, 570, 30, 40);
		  fill(198,201,175);
		  rect(240, 570, 330, 240);
		  
		  
         
          myBoat.drawBoat();
          for(var i = 0; i < fishList.size(); i++) {
				Fish currentFish = fishList.get(i); 
				currentFish.drawFish();
				currentFish.updateAndSwim();
		  
		  
			} 
        
        } 

    
    	class Boat
    	{
		 	//attributes
		    var boatX, boatY, boatLength, boatLength, boatHeight, fishingline;
		    
		    //constructor
		    Boat(var blb,var bhb)
		    {
		       	//attributs on left, parameters on the right
		    	boatLength = blb;
		    	boatHeight = bhb;
		    	boatX = random(200,300);
		   	 	boatY = -10;
		    	boatLength = 200;
		    	boatHeight = 80;
		    	fishingLine = random(250,300);
		    }

		    void drawBoat()
		    {
		// boat
		   		fill(74, 97, 186);
		    	ellipse(boatX, boatY, boatLength, boatHeight);
		    	rect(boatX-100,boatY,boatLength-100,boatHeight-40.51);
		    	rect(boatX-5,boatY+9,boatLength-190,boatHeight-50);

		    	fill(184, 184, 184);
		    	ellipse(boatX,boatY,boatLength-20,boatHeight-20);
		    	rect(boatX-100,boatY,boatLength-100,boatHeight-51);
		    	rect(boatX-5,boatY-1,boatLength-190,boatHeight-50);
		// motor
		    	rect(boatX-130,boatY-5,boatLength-182,boatHeight-40);
		    	stroke(15, 1, 15);
		    	line(boatX-130, 20,boatX-137, 20);
		    	line(boatX-137, 10,boatX-137, 30);
		//fishing line
		    	line(boatX+100,boatY+10,fishingLine,boatHeight+70);
			}
			
		}
		        
        class Fish 
        {
        	//attributes 
        	var centerX, centerY, bodyHeight, bodyLength, tailHeight, tailWidth, bodyColor, bubbleY, bubbleX;
        	Bubble myBubble;
        	//constructor 
        	Fish(var bh, var bl)
        	{
        		//attributes on the left, parameters on the right
        		bodyHeight = bh;
        		bodyLength = bl; 
        		tailHeight = random(20,30); 
        		tailWidth = random(10, 15);
        		bodyColor = color(random(0,255), random(0,255), random(0,255)); 
        		centerX = random(100, 400);
        		centerY = random(100, 400); 
        		bubbleY = centerY;
        		bubbleX = centerX+bodyLength/2;
        		myBubble = new Bubble(bubbleX, bubbleY);
        	}
        	
        	void drawFish()
        	{
        		fill(bodyColor);
        		// body
        		ellipse(centerX, centerY, bodyLength, bodyHeight);
        		// tail
        		var tailWidth = bodyLength/4;
        		var tailHeight = bodyHeight/random(2,4);
        		triangle(centerX-bodyLength/2, centerY,
        		         centerX-bodyLength/2-tailWidth, centerY-tailHeight,
        		         centerX-bodyLength/2-tailWidth, centerY+tailHeight);
        		// eye
        		fill(33, 33, 33);
        		ellipse(centerX+bodyLength/4, centerY, bodyHeight/5, bodyHeight/5);
        	}
        	void updateAndSwim()
        	{
        		swim();
        		updateFish();
        		myBubble.drawBubble();
        		myBubble.updateAndMove();
        	}
        	
        	void swim()
        	{
        	centerX = centerX + 2;
        	}
        	void updateFish()
        	{
        		if (centerX > 600){
        			centerX = 0;
        		}
        	}
        }
        class Bubble
        {
	        var bubbleX, bubbleY;
	        
	        Bubble(var bX, var bY)
	        {
	        	bubbleY = bY;
	        	bubbleX = bX;
	        }

	        void drawBubble()
	        {
        		fill(255,255,255);
        		ellipse(bubbleX ,bubbleY,10,10);
	        }
	        void updateAndMove()
	        {
	        	move();
	        	//updateBubbles();
	        }
	        void updateBubbles()
	        {
	        	if (bubbleY < cY - 5){
	        		bubbleY=cY;
	        	}
	        }
	        void move()
	        {
	       		bubbleY = bubbleY -1;
	        }
        }
        </script> 
    </head>
    
    <body>
		<canvas id="mycanvas"></canvas>
	</body>
</html>
    
